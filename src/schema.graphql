# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  currencies(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: CurrencyOrderByInput
  ): [Currency!]!
  currency(where: CurrencyWhereUniqueInput!): Currency
}

type Mutation {
  createCurrency(data: CurrencyCreateInput!): Currency!
  updateCurrency(data: CurrencyUpdateInput!, where: CurrencyWhereUniqueInput!): Currency
  upsertCurrency(
    where: CurrencyWhereUniqueInput!
    create: CurrencyCreateInput!
    update: CurrencyUpdateInput!
  ): Currency!
  deleteCurrency(where: CurrencyWhereUniqueInput!): Currency
}

# type Subscription {
# }

# type AuthPayload {
#   token: String!
#   user: User!
# }

input CurrencyCreateInput {
  id: ID
  name: String!
  nominal: Int!
  charCode: String!
  value: Float!
}

input CurrencyWhereUniqueInput {
  id: ID
  name: String
  charCode: String
}

# input LoginUserInput {
#   email: String!
#   password: String!
# }

input CurrencyUpdateInput {
  name: String
  nominal: Int
  charCode: String
  value: Float
}

type Currency {
  id: ID!
  name: String!
  nominal: Int!
  charCode: String!
  value: Float!
  updatedAt: DateTime!
  createdAt: DateTime!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
