# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
  me: User!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  # login(data: LoginUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UpdateUserInput!): User!
}

# type Subscription {
# }

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  id: ID
  name: String!
  nominal: Int!
  charCode: String!
  value: Float!
}

# input LoginUserInput {
#   email: String!
#   password: String!
# }

input UpdateUserInput {
  name: String
  nominal: Int
  charCode: String
  value: Float
}

type User {
  id: ID!
  name: String!
  nominal: Int!
  charCode: String!
  value: Float!
  updatedAt: DateTime!
  createdAt: DateTime!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
